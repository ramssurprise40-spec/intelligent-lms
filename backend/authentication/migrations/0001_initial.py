# Generated by Django 5.2.6 on 2025-09-09 20:43

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UserMFA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_enabled', models.BooleanField(default=False)),
                ('secret_key', models.CharField(blank=True, max_length=32)),
                ('backup_codes', models.JSONField(blank=True, default=list)),
                ('recovery_email', models.EmailField(blank=True, max_length=254)),
                ('recovery_phone', models.CharField(blank=True, max_length=20, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{9,15}$', 'Enter a valid phone number.')])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='mfa', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User MFA',
                'verbose_name_plural': 'User MFA Settings',
                'db_table': 'auth_user_mfa',
            },
        ),
        migrations.CreateModel(
            name='AccountLockout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField()),
                ('failed_attempts', models.PositiveIntegerField()),
                ('locked_at', models.DateTimeField(auto_now_add=True)),
                ('locked_until', models.DateTimeField()),
                ('is_active', models.BooleanField(default=True)),
                ('unlocked_at', models.DateTimeField(blank=True, null=True)),
                ('unlocked_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='unlocked_accounts', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lockouts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'auth_account_lockout',
                'ordering': ['-locked_at'],
                'indexes': [models.Index(fields=['user', '-locked_at'], name='auth_accoun_user_id_50ae2f_idx'), models.Index(fields=['is_active', 'locked_until'], name='auth_accoun_is_acti_31d1e9_idx')],
            },
        ),
        migrations.CreateModel(
            name='LoginAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=150)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('success', 'Successful'), ('failed', 'Failed'), ('blocked', 'Blocked'), ('mfa_required', 'MFA Required'), ('mfa_failed', 'MFA Failed')], max_length=20)),
                ('failure_reason', models.CharField(blank=True, max_length=200)),
                ('country', models.CharField(blank=True, max_length=100)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('attempted_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='login_attempts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'auth_login_attempt',
                'ordering': ['-attempted_at'],
                'indexes': [models.Index(fields=['user', '-attempted_at'], name='auth_login__user_id_05ed4b_idx'), models.Index(fields=['ip_address', '-attempted_at'], name='auth_login__ip_addr_8e1554_idx'), models.Index(fields=['status', '-attempted_at'], name='auth_login__status_1ebfa6_idx')],
            },
        ),
        migrations.CreateModel(
            name='SecurityEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('login_success', 'Successful Login'), ('login_failed', 'Failed Login'), ('logout', 'Logout'), ('password_change', 'Password Changed'), ('password_reset', 'Password Reset'), ('mfa_enabled', 'MFA Enabled'), ('mfa_disabled', 'MFA Disabled'), ('account_locked', 'Account Locked'), ('account_unlocked', 'Account Unlocked'), ('suspicious_activity', 'Suspicious Activity'), ('permission_denied', 'Permission Denied')], max_length=30)),
                ('risk_level', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='low', max_length=10)),
                ('description', models.TextField()),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('occurred_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='security_events', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'auth_security_event',
                'ordering': ['-occurred_at'],
                'indexes': [models.Index(fields=['user', '-occurred_at'], name='auth_securi_user_id_f24276_idx'), models.Index(fields=['event_type', '-occurred_at'], name='auth_securi_event_t_09fa30_idx'), models.Index(fields=['risk_level', '-occurred_at'], name='auth_securi_risk_le_265145_idx')],
            },
        ),
    ]
