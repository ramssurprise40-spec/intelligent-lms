# Generated by Django 5.2.6 on 2025-09-09 18:27

import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('announcement_type', models.CharField(choices=[('course', 'Course Announcement'), ('system', 'System Announcement'), ('maintenance', 'Maintenance Notice'), ('emergency', 'Emergency Alert')], max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], default='normal', max_length=10)),
                ('target_roles', models.JSONField(blank=True, default=list)),
                ('is_published', models.BooleanField(default=False)),
                ('publish_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('send_email', models.BooleanField(default=True)),
                ('send_push', models.BooleanField(default=True)),
                ('pin_to_top', models.BooleanField(default=False)),
                ('view_count', models.IntegerField(default=0)),
                ('click_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'communications_announcement',
                'ordering': ['-pin_to_top', '-publish_at'],
            },
        ),
        migrations.CreateModel(
            name='AnnouncementView',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('viewed_at', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'communications_announcement_view',
            },
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content', models.TextField()),
                ('message_type', models.CharField(choices=[('text', 'Text Message'), ('image', 'Image'), ('file', 'File'), ('system', 'System Message')], default='text', max_length=10)),
                ('sentiment_score', models.FloatField(blank=True, null=True)),
                ('toxicity_score', models.FloatField(blank=True, null=True)),
                ('is_edited', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('edited_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'communications_chat_message',
                'ordering': ['sent_at'],
            },
        ),
        migrations.CreateModel(
            name='ChatRoom',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('room_type', models.CharField(choices=[('course', 'Course Chat'), ('study_group', 'Study Group'), ('office_hours', 'Office Hours'), ('project', 'Project Discussion')], max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('is_private', models.BooleanField(default=False)),
                ('max_members', models.IntegerField(blank=True, null=True)),
                ('auto_moderate', models.BooleanField(default=True)),
                ('sentiment_tracking', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'communications_chatroom',
            },
        ),
        migrations.CreateModel(
            name='ChatRoomMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('member', 'Member'), ('moderator', 'Moderator'), ('admin', 'Administrator')], default='member', max_length=10)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('last_read_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'communications_chatroom_membership',
            },
        ),
        migrations.CreateModel(
            name='DirectMessage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('subject', models.CharField(blank=True, max_length=200)),
                ('content', models.TextField()),
                ('status', models.CharField(choices=[('sent', 'Sent'), ('delivered', 'Delivered'), ('read', 'Read'), ('archived', 'Archived')], default='sent', max_length=10)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High')], default='normal', max_length=10)),
                ('thread_id', models.UUIDField(blank=True, null=True)),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('sender_archived', models.BooleanField(default=False)),
                ('recipient_archived', models.BooleanField(default=False)),
                ('sender_deleted', models.BooleanField(default=False)),
                ('recipient_deleted', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'communications_message',
                'ordering': ['-sent_at'],
            },
        ),
        migrations.CreateModel(
            name='Forum',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_moderated', models.BooleanField(default=True)),
                ('allow_anonymous_posts', models.BooleanField(default=False)),
                ('total_posts', models.IntegerField(default=0)),
                ('total_topics', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'communications_forum',
                'ordering': ['course', 'title'],
            },
        ),
        migrations.CreateModel(
            name='ForumPost',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content', models.TextField()),
                ('status', models.CharField(choices=[('published', 'Published'), ('draft', 'Draft'), ('moderated', 'Under Moderation'), ('hidden', 'Hidden'), ('deleted', 'Deleted')], default='published', max_length=20)),
                ('is_solution', models.BooleanField(default=False)),
                ('post_number', models.PositiveIntegerField()),
                ('upvotes', models.IntegerField(default=0)),
                ('downvotes', models.IntegerField(default=0)),
                ('sentiment_score', models.FloatField(blank=True, null=True)),
                ('toxicity_score', models.FloatField(blank=True, null=True)),
                ('key_topics', models.JSONField(blank=True, default=list)),
                ('moderated_at', models.DateTimeField(blank=True, null=True)),
                ('moderation_reason', models.CharField(blank=True, max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'communications_post',
                'ordering': ['topic', 'post_number'],
            },
        ),
        migrations.CreateModel(
            name='ForumTopic',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('status', models.CharField(choices=[('open', 'Open'), ('closed', 'Closed'), ('pinned', 'Pinned'), ('locked', 'Locked')], default='open', max_length=10)),
                ('is_announcement', models.BooleanField(default=False)),
                ('is_sticky', models.BooleanField(default=False)),
                ('view_count', models.IntegerField(default=0)),
                ('post_count', models.IntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_post_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'communications_topic',
                'ordering': ['-is_sticky', '-last_post_at'],
            },
        ),
        migrations.CreateModel(
            name='PostVote',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('vote_type', models.CharField(choices=[('up', 'Upvote'), ('down', 'Downvote')], max_length=4)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'communications_vote',
            },
        ),
    ]
