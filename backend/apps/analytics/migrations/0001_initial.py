# Generated by Django 5.2.6 on 2025-09-09 18:30

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('courses', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PredictiveModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('model_type', models.CharField(choices=[('dropout_prediction', 'Dropout Prediction'), ('performance_prediction', 'Performance Prediction'), ('completion_time', 'Completion Time Prediction'), ('difficulty_assessment', 'Difficulty Assessment'), ('recommendation', 'Content Recommendation'), ('engagement_prediction', 'Engagement Prediction')], max_length=30)),
                ('description', models.TextField(blank=True)),
                ('version', models.CharField(max_length=20)),
                ('algorithm', models.CharField(max_length=100)),
                ('features', models.JSONField(default=list)),
                ('hyperparameters', models.JSONField(blank=True, default=dict)),
                ('accuracy', models.FloatField(blank=True, null=True)),
                ('precision', models.FloatField(blank=True, null=True)),
                ('recall', models.FloatField(blank=True, null=True)),
                ('f1_score', models.FloatField(blank=True, null=True)),
                ('model_path', models.CharField(blank=True, max_length=500)),
                ('training_data_size', models.IntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_production', models.BooleanField(default=False)),
                ('trained_at', models.DateTimeField()),
                ('deployed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'analytics_predictivemodel',
            },
        ),
        migrations.CreateModel(
            name='CourseAnalytics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('total_enrollments', models.IntegerField(default=0)),
                ('active_students', models.IntegerField(default=0)),
                ('completion_rate', models.FloatField(default=0.0)),
                ('dropout_rate', models.FloatField(default=0.0)),
                ('retention_rate', models.FloatField(default=0.0)),
                ('average_grade', models.FloatField(default=0.0)),
                ('median_grade', models.FloatField(default=0.0)),
                ('pass_rate', models.FloatField(default=0.0)),
                ('average_completion_time', models.DurationField(blank=True, null=True)),
                ('average_session_duration', models.DurationField(blank=True, null=True)),
                ('forum_activity_rate', models.FloatField(default=0.0)),
                ('resource_access_rate', models.FloatField(default=0.0)),
                ('peer_interaction_frequency', models.FloatField(default=0.0)),
                ('most_accessed_lessons', models.JSONField(blank=True, default=list)),
                ('least_accessed_lessons', models.JSONField(blank=True, default=list)),
                ('difficult_topics', models.JSONField(blank=True, default=list)),
                ('popular_resources', models.JSONField(blank=True, default=list)),
                ('average_rating', models.FloatField(default=0.0)),
                ('satisfaction_score', models.FloatField(default=0.0)),
                ('net_promoter_score', models.FloatField(blank=True, null=True)),
                ('learning_effectiveness_score', models.FloatField(blank=True, null=True)),
                ('content_difficulty_analysis', models.JSONField(blank=True, default=dict)),
                ('optimization_suggestions', models.JSONField(blank=True, default=list)),
                ('last_calculated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='course_analytics', to='courses.course')),
            ],
            options={
                'db_table': 'analytics_courseanalytics',
            },
        ),
        migrations.CreateModel(
            name='LearningAnalytics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('total_study_time', models.DurationField(blank=True, null=True)),
                ('average_session_duration', models.DurationField(blank=True, null=True)),
                ('total_logins', models.IntegerField(default=0)),
                ('current_streak', models.IntegerField(default=0)),
                ('longest_streak', models.IntegerField(default=0)),
                ('overall_completion_rate', models.FloatField(default=0.0)),
                ('average_score', models.FloatField(default=0.0)),
                ('improvement_rate', models.FloatField(default=0.0)),
                ('consistency_score', models.FloatField(default=0.0)),
                ('forum_participation_rate', models.FloatField(default=0.0)),
                ('resource_utilization_rate', models.FloatField(default=0.0)),
                ('peer_interaction_score', models.FloatField(default=0.0)),
                ('help_seeking_frequency', models.FloatField(default=0.0)),
                ('learning_style_prediction', models.CharField(blank=True, max_length=50)),
                ('difficulty_preference', models.CharField(blank=True, max_length=20)),
                ('optimal_study_schedule', models.JSONField(blank=True, default=dict)),
                ('predicted_outcomes', models.JSONField(blank=True, default=dict)),
                ('dropout_risk_score', models.FloatField(blank=True, null=True)),
                ('performance_risk_factors', models.JSONField(blank=True, default=list)),
                ('recommended_interventions', models.JSONField(blank=True, default=list)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='learning_analytics', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'analytics_learninganalytics',
            },
        ),
        migrations.CreateModel(
            name='LearningPath',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('target_skills', models.JSONField(default=list)),
                ('estimated_duration', models.DurationField()),
                ('difficulty_level', models.CharField(max_length=20)),
                ('milestones', models.JSONField(default=list)),
                ('prerequisites', models.JSONField(blank=True, default=list)),
                ('current_milestone', models.IntegerField(default=0)),
                ('completion_percentage', models.FloatField(default=0.0)),
                ('personalization_factors', models.JSONField(blank=True, default=dict)),
                ('adaptation_history', models.JSONField(blank=True, default=list)),
                ('is_active', models.BooleanField(default=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='learning_paths', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'analytics_learningpath',
            },
        ),
        migrations.CreateModel(
            name='PerformanceReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('report_type', models.CharField(choices=[('individual', 'Individual Student Report'), ('course', 'Course Report'), ('institutional', 'Institutional Report'), ('comparative', 'Comparative Report')], max_length=20)),
                ('period', models.CharField(choices=[('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('semester', 'Semester'), ('yearly', 'Yearly')], max_length=20)),
                ('metrics', models.JSONField(default=dict)),
                ('insights', models.JSONField(default=dict)),
                ('recommendations', models.JSONField(blank=True, default=list)),
                ('is_automated', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='performance_reports', to='courses.course')),
                ('generated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='generated_reports', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='performance_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'analytics_performancereport',
                'indexes': [models.Index(fields=['report_type', 'period'], name='analytics_p_report__af0efe_idx'), models.Index(fields=['user', 'generated_at'], name='analytics_p_user_id_94a12e_idx'), models.Index(fields=['course', 'generated_at'], name='analytics_p_course__58c491_idx')],
            },
        ),
    ]
