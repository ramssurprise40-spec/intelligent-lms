# Generated by Django 5.2.6 on 2025-09-09 18:30

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('courses', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('original_filename', models.CharField(max_length=255)),
                ('file_path', models.CharField(max_length=500)),
                ('file_size', models.BigIntegerField()),
                ('mime_type', models.CharField(max_length=100)),
                ('file_extension', models.CharField(max_length=10)),
                ('file_type', models.CharField(choices=[('document', 'Document'), ('image', 'Image'), ('video', 'Video'), ('audio', 'Audio'), ('archive', 'Archive'), ('code', 'Code'), ('other', 'Other')], max_length=20)),
                ('upload_session_id', models.CharField(blank=True, max_length=100)),
                ('status', models.CharField(choices=[('uploading', 'Uploading'), ('processing', 'Processing'), ('ready', 'Ready'), ('error', 'Error'), ('quarantined', 'Quarantined'), ('archived', 'Archived')], default='uploading', max_length=20)),
                ('processing_progress', models.IntegerField(default=0)),
                ('error_message', models.TextField(blank=True)),
                ('checksum', models.CharField(blank=True, max_length=64)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('is_public', models.BooleanField(default=False)),
                ('access_level', models.CharField(choices=[('public', 'Public'), ('course', 'Course Members'), ('group', 'Group Members'), ('private', 'Private')], default='private', max_length=20)),
                ('download_count', models.IntegerField(default=0)),
                ('view_count', models.IntegerField(default=0)),
                ('last_accessed', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_files', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'files_file',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CourseFile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=200)),
                ('description', models.TextField(blank=True)),
                ('is_required', models.BooleanField(default=False)),
                ('order', models.PositiveIntegerField(default=0)),
                ('available_from', models.DateTimeField(blank=True, null=True)),
                ('available_until', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='courses.course')),
                ('lesson', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='files', to='courses.lesson')),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_associations', to='files.file')),
            ],
            options={
                'db_table': 'files_coursefile',
                'ordering': ['course', 'lesson', 'order'],
            },
        ),
        migrations.CreateModel(
            name='FileAccess',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('access_type', models.CharField(choices=[('download', 'Download'), ('view', 'View'), ('preview', 'Preview'), ('stream', 'Stream')], max_length=20)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('referrer', models.URLField(blank=True)),
                ('duration', models.DurationField(blank=True, null=True)),
                ('bytes_transferred', models.BigIntegerField(blank=True, null=True)),
                ('accessed_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='courses.course')),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='access_logs', to='files.file')),
                ('lesson', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='courses.lesson')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='file_accesses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'files_fileaccess',
                'ordering': ['-accessed_at'],
            },
        ),
        migrations.CreateModel(
            name='FileProcessingTask',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('task_type', models.CharField(choices=[('virus_scan', 'Virus Scan'), ('thumbnail_generation', 'Thumbnail Generation'), ('text_extraction', 'Text Extraction'), ('metadata_extraction', 'Metadata Extraction'), ('video_processing', 'Video Processing'), ('image_optimization', 'Image Optimization'), ('document_conversion', 'Document Conversion')], max_length=30)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('celery_task_id', models.CharField(blank=True, max_length=100)),
                ('progress', models.IntegerField(default=0)),
                ('result', models.JSONField(blank=True, default=dict)),
                ('error_details', models.TextField(blank=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='processing_tasks', to='files.file')),
            ],
            options={
                'db_table': 'files_processingtask',
            },
        ),
        migrations.CreateModel(
            name='FileShare',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('share_type', models.CharField(choices=[('direct', 'Direct Share'), ('link', 'Share Link'), ('public_link', 'Public Link')], max_length=20)),
                ('permission_level', models.CharField(choices=[('view', 'View Only'), ('download', 'View & Download'), ('edit', 'View, Download & Edit')], default='view', max_length=10)),
                ('share_token', models.CharField(blank=True, max_length=100, unique=True)),
                ('password_protected', models.BooleanField(default=False)),
                ('access_count', models.IntegerField(default=0)),
                ('max_access_count', models.IntegerField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shares', to='files.file')),
                ('shared_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shared_files', to=settings.AUTH_USER_MODEL)),
                ('shared_with', models.ManyToManyField(blank=True, related_name='received_file_shares', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'files_fileshare',
            },
        ),
        migrations.CreateModel(
            name='FileVersion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('version_number', models.PositiveIntegerField()),
                ('file_path', models.CharField(max_length=500)),
                ('file_size', models.BigIntegerField()),
                ('checksum', models.CharField(max_length=64)),
                ('change_summary', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='files.file')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='file_versions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'files_fileversion',
                'ordering': ['file', '-version_number'],
            },
        ),
        migrations.AddIndex(
            model_name='file',
            index=models.Index(fields=['uploaded_by', '-created_at'], name='files_file_uploade_1be14c_idx'),
        ),
        migrations.AddIndex(
            model_name='file',
            index=models.Index(fields=['file_type', 'status'], name='files_file_file_ty_7e9329_idx'),
        ),
        migrations.AddIndex(
            model_name='file',
            index=models.Index(fields=['checksum'], name='files_file_checksu_61e68a_idx'),
        ),
        migrations.AddIndex(
            model_name='fileaccess',
            index=models.Index(fields=['file', '-accessed_at'], name='files_filea_file_id_9fcc85_idx'),
        ),
        migrations.AddIndex(
            model_name='fileaccess',
            index=models.Index(fields=['user', '-accessed_at'], name='files_filea_user_id_c5a1c7_idx'),
        ),
        migrations.AddIndex(
            model_name='fileaccess',
            index=models.Index(fields=['course', '-accessed_at'], name='files_filea_course__f618be_idx'),
        ),
        migrations.AddIndex(
            model_name='fileprocessingtask',
            index=models.Index(fields=['file', 'task_type'], name='files_proce_file_id_aaaa15_idx'),
        ),
        migrations.AddIndex(
            model_name='fileprocessingtask',
            index=models.Index(fields=['status', 'created_at'], name='files_proce_status_522fa1_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='fileversion',
            unique_together={('file', 'version_number')},
        ),
    ]
