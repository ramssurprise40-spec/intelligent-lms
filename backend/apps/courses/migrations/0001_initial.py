# Generated by Django 5.2.6 on 2025-09-09 18:27

import django.core.validators
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=250, unique=True)),
                ('description', models.TextField()),
                ('short_description', models.CharField(blank=True, max_length=300)),
                ('difficulty_level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced'), ('expert', 'Expert')], max_length=20)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('archived', 'Archived'), ('private', 'Private')], default='draft', max_length=20)),
                ('language', models.CharField(default='en', max_length=10)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('enrollment_start', models.DateTimeField(blank=True, null=True)),
                ('enrollment_end', models.DateTimeField(blank=True, null=True)),
                ('max_students', models.IntegerField(blank=True, null=True)),
                ('estimated_hours', models.IntegerField(help_text='Estimated completion time in hours')),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='course_thumbnails/')),
                ('trailer_video', models.URLField(blank=True)),
                ('ai_summary', models.TextField(blank=True, help_text='AI-generated course summary')),
                ('learning_objectives', models.JSONField(blank=True, default=list)),
                ('auto_generated_tags', models.JSONField(blank=True, default=list)),
                ('difficulty_analysis', models.JSONField(blank=True, default=dict)),
                ('total_enrollments', models.IntegerField(default=0)),
                ('average_rating', models.FloatField(default=0.0)),
                ('completion_rate', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'courses_course',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CourseEnrollment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('enrolled', 'Enrolled'), ('completed', 'Completed'), ('dropped', 'Dropped'), ('suspended', 'Suspended')], default='enrolled', max_length=20)),
                ('enrolled_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('dropped_at', models.DateTimeField(blank=True, null=True)),
                ('progress_percentage', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('lessons_completed', models.IntegerField(default=0)),
                ('total_study_time', models.DurationField(blank=True, null=True)),
                ('current_grade', models.FloatField(blank=True, null=True)),
                ('final_grade', models.FloatField(blank=True, null=True)),
                ('predicted_completion_date', models.DateTimeField(blank=True, null=True)),
                ('risk_score', models.FloatField(blank=True, null=True)),
                ('personalized_recommendations', models.JSONField(blank=True, default=list)),
                ('is_active', models.BooleanField(default=True)),
                ('certificate_issued', models.BooleanField(default=False)),
                ('certificate_issued_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'courses_enrollment',
            },
        ),
        migrations.CreateModel(
            name='CourseModule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('estimated_hours', models.FloatField(default=1.0)),
                ('is_required', models.BooleanField(default=True)),
                ('unlock_date', models.DateTimeField(blank=True, null=True)),
                ('difficulty_score', models.FloatField(blank=True, null=True)),
                ('completion_time_prediction', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'courses_module',
                'ordering': ['course', 'order'],
            },
        ),
        migrations.CreateModel(
            name='CourseRating',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('review', models.TextField(blank=True)),
                ('content_quality', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('instructor_rating', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('difficulty_rating', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('would_recommend', models.BooleanField(null=True)),
                ('sentiment_score', models.FloatField(blank=True, null=True)),
                ('key_topics', models.JSONField(blank=True, default=list)),
                ('is_approved', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'courses_rating',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CourseTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('slug', models.SlugField(max_length=60, unique=True)),
                ('description', models.TextField(blank=True)),
                ('color', models.CharField(default='#007bff', max_length=7)),
                ('is_ai_generated', models.BooleanField(default=False)),
                ('usage_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'courses_tag',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CourseTagging',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relevance_score', models.FloatField(default=1.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'courses_tagging',
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=250)),
                ('content', models.TextField(blank=True)),
                ('lesson_type', models.CharField(choices=[('video', 'Video'), ('text', 'Text/Article'), ('interactive', 'Interactive Content'), ('quiz', 'Quiz'), ('assignment', 'Assignment'), ('discussion', 'Discussion'), ('live_session', 'Live Session'), ('external_link', 'External Link')], max_length=20)),
                ('order', models.PositiveIntegerField(default=0)),
                ('video_url', models.URLField(blank=True)),
                ('video_duration', models.DurationField(blank=True, null=True)),
                ('external_url', models.URLField(blank=True)),
                ('estimated_minutes', models.IntegerField(default=10)),
                ('is_free', models.BooleanField(default=False)),
                ('is_required', models.BooleanField(default=True)),
                ('auto_transcript', models.TextField(blank=True)),
                ('key_concepts', models.JSONField(blank=True, default=list)),
                ('generated_summary', models.TextField(blank=True)),
                ('difficulty_rating', models.FloatField(blank=True, null=True)),
                ('view_count', models.IntegerField(default=0)),
                ('average_completion_time', models.DurationField(blank=True, null=True)),
                ('completion_rate', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'courses_lesson',
                'ordering': ['module', 'order'],
            },
        ),
        migrations.CreateModel(
            name='LessonProgress',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_completed', models.BooleanField(default=False)),
                ('completion_percentage', models.FloatField(default=0.0)),
                ('time_spent', models.DurationField(blank=True, null=True)),
                ('first_accessed', models.DateTimeField(blank=True, null=True)),
                ('last_accessed', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('access_count', models.IntegerField(default=0)),
                ('engagement_score', models.FloatField(blank=True, null=True)),
                ('difficulty_rating', models.FloatField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'courses_lesson_progress',
            },
        ),
    ]
