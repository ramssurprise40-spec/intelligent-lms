# Generated by Django 5.2.6 on 2025-09-10 06:46

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('courses', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CourseAnalytics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('metric_type', models.CharField(choices=[('enrollment', 'Enrollment Metrics'), ('engagement', 'Engagement Metrics'), ('completion', 'Completion Metrics'), ('performance', 'Performance Metrics'), ('satisfaction', 'Satisfaction Metrics')], max_length=20)),
                ('metric_name', models.CharField(max_length=100)),
                ('metric_value', models.FloatField()),
                ('date', models.DateField()),
                ('period_type', models.CharField(default='daily', max_length=20)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='courses.course')),
            ],
            options={
                'db_table': 'courses_analytics',
                'ordering': ['course', 'metric_type', '-date'],
                'indexes': [models.Index(fields=['course', 'metric_type', 'date'], name='courses_ana_course__fd4b05_idx'), models.Index(fields=['metric_type', 'date'], name='courses_ana_metric__b3596d_idx'), models.Index(fields=['date'], name='courses_ana_date_afbca3_idx')],
                'unique_together': {('course', 'metric_type', 'metric_name', 'date')},
            },
        ),
        migrations.CreateModel(
            name='CourseAnnouncement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], default='normal', max_length=10)),
                ('target_all_students', models.BooleanField(default=True)),
                ('is_published', models.BooleanField(default=True)),
                ('publish_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('send_email', models.BooleanField(default=True)),
                ('send_push_notification', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_announcements', to=settings.AUTH_USER_MODEL)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_announcements', to='courses.course')),
                ('target_students', models.ManyToManyField(blank=True, related_name='course_targeted_announcements', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'courses_announcement',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['course', '-created_at'], name='courses_ann_course__bc71f5_idx'), models.Index(fields=['is_published', 'publish_at'], name='courses_ann_is_publ_29ddbc_idx'), models.Index(fields=['priority', '-created_at'], name='courses_ann_priorit_108e18_idx')],
            },
        ),
        migrations.CreateModel(
            name='CourseCertificate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('certificate_type', models.CharField(choices=[('completion', 'Completion Certificate'), ('achievement', 'Achievement Certificate'), ('participation', 'Participation Certificate'), ('excellence', 'Certificate of Excellence')], default='completion', max_length=20)),
                ('certificate_number', models.CharField(max_length=50, unique=True)),
                ('minimum_score', models.FloatField(default=70.0)),
                ('required_modules', models.JSONField(blank=True, default=list)),
                ('issued_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('certificate_pdf', models.FileField(blank=True, null=True, upload_to='certificates/')),
                ('certificate_template', models.CharField(default='default', max_length=100)),
                ('verification_code', models.CharField(max_length=32, unique=True)),
                ('is_valid', models.BooleanField(default=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('enrollment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='certificate', to='courses.courseenrollment')),
            ],
            options={
                'db_table': 'courses_certificate',
                'ordering': ['-issued_at'],
                'indexes': [models.Index(fields=['certificate_number'], name='courses_cer_certifi_b5881b_idx'), models.Index(fields=['verification_code'], name='courses_cer_verific_ead7dc_idx'), models.Index(fields=['issued_at'], name='courses_cer_issued__20c35d_idx')],
            },
        ),
        migrations.CreateModel(
            name='CourseWaitlist',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('waiting', 'Waiting'), ('enrolled', 'Enrolled'), ('expired', 'Expired'), ('removed', 'Removed')], default='waiting', max_length=20)),
                ('position', models.PositiveIntegerField()),
                ('priority_score', models.FloatField(default=1.0)),
                ('notification_sent', models.BooleanField(default=False)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='waitlist', to='courses.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='waitlist_entries', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'courses_waitlist',
                'ordering': ['course', 'position'],
                'indexes': [models.Index(fields=['course', 'status', 'position'], name='courses_wai_course__1cec9d_idx'), models.Index(fields=['student', 'created_at'], name='courses_wai_student_341732_idx')],
                'unique_together': {('course', 'student')},
            },
        ),
        migrations.CreateModel(
            name='LessonContent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content_type', models.CharField(choices=[('text', 'Text Content'), ('html', 'HTML Content'), ('markdown', 'Markdown Content'), ('video', 'Video Content'), ('audio', 'Audio Content'), ('document', 'Document'), ('presentation', 'Presentation'), ('interactive', 'Interactive Content')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField(blank=True)),
                ('file', models.FileField(blank=True, null=True, upload_to='lesson_content/')),
                ('file_size', models.BigIntegerField(blank=True, null=True)),
                ('file_type', models.CharField(blank=True, max_length=100)),
                ('version', models.PositiveIntegerField(default=1)),
                ('is_current', models.BooleanField(default=True)),
                ('change_notes', models.TextField(blank=True)),
                ('duration', models.DurationField(blank=True, null=True)),
                ('language', models.CharField(default='en', max_length=10)),
                ('accessibility_features', models.JSONField(blank=True, default=dict)),
                ('auto_transcript', models.TextField(blank=True)),
                ('auto_summary', models.TextField(blank=True)),
                ('key_concepts', models.JSONField(blank=True, default=list)),
                ('difficulty_score', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_content', to=settings.AUTH_USER_MODEL)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='content_versions', to='courses.lesson')),
            ],
            options={
                'db_table': 'courses_lesson_content',
                'ordering': ['lesson', '-version'],
                'indexes': [models.Index(fields=['lesson', 'version'], name='courses_les_lesson__3376e4_idx'), models.Index(fields=['lesson', 'is_current'], name='courses_les_lesson__d16d66_idx'), models.Index(fields=['created_at'], name='courses_les_created_76873f_idx')],
                'unique_together': {('lesson', 'version')},
            },
        ),
    ]
