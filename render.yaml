# Render.com Blueprint for Intelligent LMS

services:
  # Django Backend
  - type: web
    name: intelligent-lms-backend
    runtime: python
    repo: https://github.com/ramssurprise40-spec/intelligent-lms.git
    region: oregon
    branch: main
    rootDir: ./backend
    buildCommand: |
      pip install --upgrade pip
      pip install -r requirements.txt
    preDeployCommand: |
      python manage.py migrate --noinput
      python manage.py collectstatic --noinput
    startCommand: |
      gunicorn intelligent_lms.wsgi:application --bind 0.0.0.0:$PORT --workers 2
    healthCheckPath: /health
    plan: free
    envVars:
      - key: DJANGO_SECRET_KEY
        generateValue: true
      - key: DJANGO_DEBUG
        value: "False"
      - key: DJANGO_ALLOWED_HOSTS
        value: "*.onrender.com"
      - key: CORS_ALLOWED_ORIGINS
        value: "https://intelligent-lms-frontend.onrender.com"
      # Set these manually in the Render dashboard (reuse your existing DB/Redis if any):
      # - key: DATABASE_URL
      #   value: "postgres://..."
      # - key: REDIS_URL
      #   value: "redis://..."
      # - key: USE_REDIS
      #   value: "false"
      # - key: CELERY_BROKER_URL
      #   value: "redis://..."
      # - key: CELERY_RESULT_BACKEND
      #   value: "redis://..."
      # - key: OPENAI_API_KEY
      #   sync: false

  # AI Search Microservice
  - type: web
    name: intelligent-lms-ai-search
    runtime: python
    repo: https://github.com/ramssurprise40-spec/intelligent-lms.git
    region: oregon
    branch: main
    rootDir: ./microservices/ai_search
    buildCommand: |
      pip install --upgrade pip
      pip install -r requirements.txt
    startCommand: |
      uvicorn main:app --host 0.0.0.0 --port $PORT --workers 1
    plan: free
    envVars:
      # - key: OPENAI_API_KEY
      #   sync: false
      # - key: CHROMA_PERSIST_DIR
      #   value: "/data/chroma"

  # Optionally add these later after core services are healthy
  # - type: web
  #   name: intelligent-lms-ai-content
  #   ...
  # - type: web
  #   name: intelligent-lms-ai-assessment
  #   ...

  # Frontend should be deployed as a separate static site service
