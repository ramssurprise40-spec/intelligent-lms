# Render.com Blueprint for Intelligent LMS

databases:
  - name: intelligent-lms-postgres
    databaseName: intelligent_lms
    user: lms_user
    region: oregon
    plan: starter

services:
  # Redis Cache
  - type: redis
    name: intelligent-lms-redis
    region: oregon
    plan: starter
    maxmemoryPolicy: allkeys-lru

  # Django Backend
  - type: web
    name: intelligent-lms-backend
    runtime: python3
    repo: https://github.com/ramssurprise40-spec/intelligent-lms.git
    region: oregon
    branch: main
    rootDir: ./backend
    buildCommand: |
      pip install --upgrade pip
      pip install -r requirements.txt
      python manage.py collectstatic --noinput
      python manage.py migrate
    startCommand: |
      gunicorn intelligent_lms.wsgi:application --bind 0.0.0.0:$PORT --workers 3
    healthCheckPath: /health/
    plan: starter
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: intelligent-lms-postgres
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: intelligent-lms-redis
          property: connectionString
      - key: DJANGO_SECRET_KEY
        generateValue: true
      - key: DJANGO_DEBUG
        value: "False"
      - key: DJANGO_ALLOWED_HOSTS
        value: "*"

  # AI Search Microservice
  - type: web
    name: intelligent-lms-ai-search
    runtime: python3
    repo: https://github.com/ramssurprise40-spec/intelligent-lms.git
    region: oregon
    branch: main
    rootDir: ./microservices/ai_search
    buildCommand: |
      pip install --upgrade pip
      pip install -r requirements.txt
    startCommand: |
      uvicorn main:app --host 0.0.0.0 --port $PORT
    plan: starter

  # React Frontend
  - type: staticSite
    name: intelligent-lms-frontend
    repo: https://github.com/ramssurprise40-spec/intelligent-lms.git
    region: oregon
    branch: main
    rootDir: ./frontend
    buildCommand: |
      npm ci
      npm run build
    staticPublishPath: ./dist
